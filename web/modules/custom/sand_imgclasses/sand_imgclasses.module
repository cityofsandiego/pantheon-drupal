<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function sand_imgclasses_form_editor_media_dialog_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['align'])) {
    $cla_string = "";
    $editor_object = $form_state->getUserInput();
    if (array_key_exists('attributes', $editor_object)) {
      if (isset($editor_object['attributes']['class']) &&
        !empty($editor_object['attributes']['class'])) {
        $classes = @$editor_object['attributes']['class'];
        // Prepare default values.
        if (!empty($classes)) {
          $arrClasses = explode(" ",$classes);
          $defPlacement = array_keys($arrClasses[0]);
          $defDSize = array_keys($arrClasses[1]);
          $defMSize = array_keys($arrClasses[2]);
        } else {
          $defPlacement = "img-left";
          $defDSize = "width-25";
          $defMSize = "width-100--mobile";
        }
      }
    }
    // Placement field.
    $form['placement_class'] = [
      '#type' => 'select',
      '#title' => t('Placement'),
      '#description' => t('Select placement of image.'),
      '#default_value' => $defPlacement,
      '#options' => ["img-left" => "Left Image Wrap", "img-right" => "Right Image Wrap"]
    ];
    // Desktop Size field.
    $form['dsize_class'] = [
      '#type' => 'select',
      '#title' => t('Image Size on Desktop'),
      '#description' => t('Select size of image in desktop view.'),
      '#default_value' => $defDSize,
      '#options' => ["width-25" => "25% width", "width-33" => "33% width", "width-50" => "50% width"]
    ];
    // Mobile Size field.
    $form['msize_class'] = [
      '#type' => 'select',
      '#title' => t('Image Size on Mobile'),
      '#description' => t('Select size of image in mobile view.'),
      '#default_value' => $defMSize,
      '#options' => ["width-50--mobile" => "50% width", "width-100--mobile" => "100% width"]
    ];
    // Add submit handler.
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' &&
        isset($form['actions'][$action]['#type']) &&
        $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'sand_imgclasses_media_dialog_submit';
      }
    }
  }
}

/**
 * Submit handler for editor_media_dialog form.
 *
 * @param array $form
 *   Form fields array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state object.
 */
function sand_imgclasses_media_dialog_submit(array &$form, FormStateInterface $form_state) {
  // Get selected classes.
  $placement_class = $form_state->getValue('placement_class');
  $dsize_class = $form_state->getValue('dsize_class');
  $msize_class = $form_state->getValue('msize_class');
  $classes = $placement_class . " " . $dsize_class . " " . $msize_class;
  if (!empty($classes)) {
    $attributes = $form_state->getValue('attributes', []);
    $attributes['class'] = $classes;

    // Set embed class.
    $form_state->setValue('attributes', $attributes);
  }
}

function sand_imgclasses_preprocess_entity_embed_container(&$variables) {  
  if (!empty($variables['attributes']['class'][1])) {
    $class_custom = $variables['attributes']['class'][1];
    unset($variables['attributes']['class'][1]);
    $html_string = $variables['children']->__toString();
    $DOM_object = Html::load($html_string);
    foreach ($DOM_object->getElementsByTagName('img') as $img) {      
      $class = $img->getAttribute('class');
      if (!empty($class)) {
        $img->setAttribute('class', $class . ' ' . $class_custom);
      } else {
        $img->setAttribute('class', $class_custom);
      }
    }    
    $html_string = Html::serialize($DOM_object);
    $variables['children'] = $variables['children']->create($html_string);
  }
}