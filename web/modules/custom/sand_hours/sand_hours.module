<?php

/**
 * @file
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_help().
 */
function sand_hours_help($route_name): ?string {
  return sand_help_show_help(__DIR__, $route_name);
}


function sand_hours_entity_display_build_alter(&$build, $context) {

  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
  $entity = &$context['entity'];
  if ($context["view_mode"] === 'full' && $entity->getEntityTypeId() === 'node' && $entity->bundle() === 'location') {
    if (!empty($build["field_location_hours"][0])) {
      $key = $build["field_location_hours"][0]["#theme"] === 'office_hours' ? 0 : 1;
      if (!empty($build["field_location_hours"][$key]["#office_hours"])) {
        $day = date('w');
        $week_start = date('m-d-Y', strtotime('-'.$day.' days'));
        $office_hours = &$build["field_location_hours"][$key]["#office_hours"];

          $query_date = \Drupal::service('sand_type.query_date');
          $nids = $query_date->getIds();
          $build['entity_display_build_alter']['#markup'] = '<div>Content added in hook_entity_display_build_alter for entity id ' . implode(', ', $nids) . '</div>';

          // Now query the field_date_date field to see if any starting dates (only date part) matches any of our days in the array
        // if so, then apply the "closed" to the matching date
      }
    }
    
  }
}