{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'background-white'
  ]
%}
{{ content.content_moderation_control }}
<article{{ attributes.addClass(classes) }}>
  <div {{ content_attributes.addClass('node__content') }}>
    <div class="grid-x">
      <div class="cell small-12 medium-auto event-title l-padding-mobile-hm">
        <h1 class="main__heading">{{ label.0 }}</h1>

        {% if content.field_subtitle[0] %}
          <!--<div class="main__content subheading l-padding-desktop-hd">
            {{ content.field_subtitle.0 }}
          </div>-->
        {% endif %}
        {% if content.field_event_date[0] %}
          {% if (url_params["event-date"]) is not empty %}
          <div class="date-wrapper subheading l-padding-ts">
            {{ (url_params["event-date"]) }}
          </div>
          {% else %}
            {% if content.field_event_date.1["#value"] is empty %}
            <div class="date-wrapper subheading l-padding-ts">
            {{ content.field_event_date }}
            </div>
            {% else %}
            <div class="accordions js-toggle-accordion l-margin-desktop-hx">
              <div class="accordion l-padding-desktop-hx">
                <p class="accordion__heading"><a class="accordion__link" href="#">View Event Dates <i class="toggle-icon"></i></a></p>
                <div class="accordion__drawer subheading">
                  {{ content.field_event_date }}
                </div>
              </div>
            </div>
            {% endif %}      
          {% endif %}
        {% endif %}

      </div>

      {% if content.field_image.0 %}
        <div class="cell small-12 medium-5 main__image l-padding-desktop-rd l-padding-desktop-vd text-center">
          {{ content.field_image }}
        </div>
      {% endif %}
    </div>
  </div>
</article>

<!-- After header main body text & slide show -->
<main class="body-content background-white l-padding-am">
  <div class="entry__content grid-x grid-margin-x">
    <div class="cell medium-auto">
      <!-- Body -->
      <div class="l-margin-bd">
      {{ content.body }}
      </div>
      <!-- Location Text field that is Under Special Events -->
      {% if content.field_event_location_txt[0] %}
      <p><strong>Location:</strong> {{ content.field_event_location_txt[0] }}</p>
      {% endif %}

      <!-- Event URL -->
      {% if content.field_website[0] %}
      <p><strong>Website:</strong> {{ content.field_website.0 }}</p>
      {% endif %}
    </div>

    <div class="cell medium-4">
      <!-- Address Card -->
      {% if content.field_event_location.0.address_line1["#value"] is not empty %}
        <div class="l-padding-ad text-center--mobile l-margin-mobile-td background-off-white rounded-corners">
          <div class="grid-x">
            <div class="cell medium-3 text-center">
              <p><i class="icon-map-marker icon--circle icon--ms cerulean-bg"></i></p>
              <!--<img src="{{ url('<front>') }}themes/custom/sand/images/gmap-markers/marker.png" alt="" width="83" height="83">-->
            </div>
            <div class="cell medium-auto">
              <address style="font-weight: bold">{{ content.field_event_location }}</address>
            </div>
          </div>
          {% if content.field_address_pin.0 %}
            {% set latlon %}
              {{ content.field_address_pin.0 }}
            {% endset %}	
          
            <p class="text-center l-margin-td">
              <a href="https://maps.google.com/maps?&z=15&mrt=yp&t=m&q={% spaceless %}{{ latlon|render|striptags|trim }}{% endspaceless %}" class="btn btn--secondary">Get Directions</a>
            </p>
          {% endif %}
        </div>
      {% endif %}
      <!-- // End Address Card -->
    </div>
  </div>
</div>
{% if content.field_event_do_not_show_map.0['#markup'] == 'Off' %}
<div id="maprow" class="row">
  <iframe src="https://www.google.com/maps/embed/v1/place?key=AIzaSyBD0BdPQUod50DCv_vczFxEbO4ox7w9hnM&amp;q={% spaceless %}{{ latlon|render|striptags|trim }}{% endspaceless %}" style="width: 100%; height: 300px; top: 0px; left: 0px; border: medium none;" frameborder="0"></iframe>
</div>
{% endif %}
{% if content.field_department.0["#title"] == "Special Events & Filming" %}
<div class="l-padding-am background-white resources">
    <div class="grid-x grid-margin-x field--name-field-resources">
      <div class="field__item">
        <div class="paragraph--type--resources">
          <a class="btn btn--wide btn--secondary btn--icon" href="/events">Event Listing <i class="icon-chevron-right"></i></a>
        </div>
      </div>
      <div class="field__item">
        <div class="paragraph--type--resources">
          <a class="btn btn--wide btn--secondary btn--icon l-flex-center-v" href="/events/calendar">Event Calendar <i class="icon-chevron-right"></i></a>
        </div>
      </div>
      <div class="field__item">
      </div>
      <div class="field__item">
      </div>
    </div>
</div>
{% endif %}
