{"version":3,"sources":["3-atoms/atoms.scss","1-settings-tools/settings-tools.scss","0-vendor/vendor.scss","1-settings-tools/_breakpoints.scss","1-settings-tools/_colors.scss","1-settings-tools/_fonts.scss","1-settings-tools/_placeholders.scss","3-atoms/_buttons.scss","3-atoms/_headings.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","3-atoms/_media.scss","3-atoms/_pager.scss","3-atoms/_social.scss","3-atoms/_table.scss","3-atoms/_type-and-links.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;EACE,aHDS;;;AGIX;EACE;;ACuDE;EDxDJ;IAII;;;;AAIJ;EACE;;AC+CE;EDhDJ;IAII;;;;AAIJ;EACE;;ACuCE;EDxCJ;IAII;;;;AAKJ;EACE;;AC8BE;ED/BJ;IAII;;;;AAIJ;EACE;;ACsBE;EDvBJ;IAII;;;;AAIJ;EACE;;ACcE;EDfJ;IAII;;;ACWA;EDfJ;IAQI;;;;AEzDJ;AAAA;AAAA;AAGA;EACE;;AAEA;EACE;;AAGF;EACE;EACA;;;AAKF;EACE;;;AClBJ;AAAA;AAAA;AAGA;EACE;;AAIG;EACC;;;ACTN;AAAA;AAAA;AAIE;EACE;;AAEA;AAAA;EAEE;EACA;;AAEA;AAAA;EACE;EACA;EACA;;AAMF;EACE;;;ACtBR;AAAA;AAAA;AAIA;EACE;EACA;;AAEA;EACE;EACA;;AAIA;AAAA;EAEE;;;AChBN;AAAA;AAAA;AAIA;EACE,OVIU;;AUFV;EACE;;AAGF;EACE;EACA;EACA;;;AAIJ;EACE;EACA;EACA;;;AAKA;AAAA;EAEE;EACA;;AAEA;AAAA;EACE;EACA;;AAIJ;EACE;;AAGF;EACE","file":"atoms.css","sourcesContent":["/* ============================================================\n  Styles for bare HTML elements (h1, a, p, etc.)\n  ============================================================ */\n\n@import '../1-settings-tools/settings-tools';\n@import 'buttons';\n@import 'headings';\n@import 'media';\n@import 'pager';\n@import 'social';\n@import 'table';\n@import 'type-and-links';","/* ============================================================\n  Preprocessors, fonts, variables.\n  These ITCSS naming conventions and structure are inspired by Lindsay Grizzard's article on Medium: https://medium.com/gusto-design/creating-the-perfect-css-system-fa38f5bcdd9e\n  ============================================================ */\n@import '../0-vendor/vendor';\n@import 'breakpoints';\n@import 'colors';\n@import 'fonts';\n@import 'placeholders';","/* ============================================================\n  Vendor-specific styles.\n  ============================================================ */\n\n@import '../../node_modules/breakpoint-sass/stylesheets/breakpoint';","/* ============================================================\n  Breakpoints\n  ============================================================ */\n  @include add-breakpoint(xxxs, (321px, 'no-query' true));\n  @include add-breakpoint(xxs,  (444px, 'no-query' true));\n  @include add-breakpoint(xs,   (555px, 'no-query' true));\n  @include add-breakpoint(s,    (666px, 'no-query' true));\n  @include add-breakpoint(m,    (768px, 'no-query' true));\n  @include add-breakpoint(ml,   (888px, 'no-query' true));\n  @include add-breakpoint(l,    (1024px, 'no-query' true));\n  @include add-breakpoint(xl,   (1280px));\n  @include add-breakpoint(xxl,  (1440px));\n  @include add-breakpoint(xxxl,  (1920px));\n\n  @include add-breakpoint(landscape, (max-width 666px) (orientation landscape));\n  ","/* ============================================================\n  Colors\n  ============================================================ */\n\n// Primary\n// ----------------------------------------------------------------------\n\n$primary-1: #0098db; // $cerulean\n$primary-2: #00c7b2; // $robin\n$primary-3: #009581; // $teal\n$primary-4: #ffa02f; // $sunshade\n$primary-5: #fcd900; // $schoolbus\n$primary-6: #37424a; // $spruce\n$primary-7: #dad7cb; // $westar\n\n// Secondary\n// ----------------------------------------------------------------------\n\n$accent-1: #e89e3b; // $tulip = orange\n$accent-2: #a7abad; // $chateau = light gray\n$accent-3: #005bbb; // $science = blue\n$accent-4: #5d676f; // $shuttle = gray\n$accent-5: #fed100; // $gold\n$accent-6: #5eb6e4; // $picton\n$accent-7: #009581; // $teal\n$accent-8: #80e0d3; // $riptide\n$accent-9: #ffb652; // $texasrose\n$accent-10: #f3ec7a; // $manz\n$accent-11: #00549f; // $endeavour = blue\n\n// Global\n// ----------------------------------------------------------------------\n\n$white: #fff;\n$off-white: #f6f6f6;\n$off-black: #222222;\n$mercury: #e4e9eb;\n$alto: #dde2e5;\n$gray: #656667;\n$charcoal: #333332;\n$pomegranate: #ee3228; // red\n$purple: #551a8b;\n\n// Alerts\n// ----------------------------------------------------------------------\n\n$status-1: #659f13;\n$atatus-1-lt: #f2fae3;\n$status-2: #e28327;\n$status-2-lt: #fffceb;\n$status-3: #c51313;\n$status-3-lt: #ffdad7;\n$emergency: #FFFFFF;\n$emergency-lt: #c51313;\n","/* ============================================================\n  Styles for fonts/typefaces.\n  ============================================================ */\n\n$headline: \"Open Sans\", sans-serif;\n$body-copy: \"Open Sans\", sans-serif;","/* ============================================================\n  Placeholders for repeat styles.\n  ============================================================ */\n\n%centered-layout {\n  padding: 0 2rem;\n\n  @include respond-to('l') {\n    padding: 2rem;\n  }\n\n  @include respond-to('xl') {\n    padding: 2rem 5rem;\n  }\n\n  @include respond-to('xxl') {\n    padding: 2rem 6.25rem;\n  }\n\n}","/* ============================================================\n  Styles for buttons.\n  ============================================================ */\n\n.button {\n\n}","/* ============================================================\n  Styles for heading typography.\n  ============================================================ */\n\nh1, h2, h3, h4, h5 {\n  font-family: $headline;\n}\n\nh1 {\n  font-size: 2.125rem;\n\n  @include respond-to('xxs') {\n    font-size: 2.375rem;\n  }\n}\n\nh2 {\n  font-size: 1.875rem;\n\n  @include respond-to('xxs') {\n    font-size: 2.125rem;\n  }\n}\n\nh3 {\n  font-size: 1.625rem;\n\n  @include respond-to('xxs') {\n    font-size: 1.875rem;\n  }\n\n}\n\nh4 {\n  font-size: 1.375rem;\n\n  @include respond-to('xxs') {\n    font-size: 1.75rem; \n  }\n}\n\nh5 {\n  font-size: 1.25rem;\n\n  @include respond-to('xxs') {\n    font-size: 1.5rem;\n  }\n}\n\n#block-paladin-page-title > h1 {\n  margin: 0 0 .5rem;\n\n  @include respond-to('m') {\n    max-width: 37.5rem;\n  }\n\n  @include respond-to('l') {\n    max-width: 50rem;\n  }\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","/* ============================================================\n  Styles for media.\n  ============================================================ */\n.embedded-entity {\n  margin: .5rem 0;\n\n  &.align-left {\n    margin: .5rem .5rem 0 0;\n  }\n\n  figcaption {\n    font-size: .9rem;\n    margin: .25rem 0;\n  }\n}\n\n.featured-image {\n  img {\n    padding: .8rem 0 .8rem 1.3rem;\n  }\n}\n","/* ============================================================\n  Styles for the pager.\n  ============================================================ */\n.pager {\n  margin: 1.5rem 0;\n\n  &__items {\n\n     .pager__item {\n      padding: .25rem .5rem !important;\n    }\n  }\n}","/* ============================================================\n  Styles for social icons.\n  ============================================================ */\n\n  #block-share-and-print {\n    margin: 1.5rem 0;\n\n    .share,\n    .print {\n      font-size: 1.2rem;\n      margin: 0 1em 0 .5rem;\n      \n      svg {\n        position: relative;\n        left: -.2rem;\n        top: .05rem;\n      }\n    }\n\n    .social-wrap {\n  \n      .social-sharing-buttons {\n        margin: 1rem 0;\n      }\n    }\n  }","/* ============================================================\n  Styles for tables\n  ============================================= */\n\ntable {\n  width: 100%;\n  font-size: 1rem !important;\n\n  p {\n    font-size: 1rem !important;\n    margin: 0;\n  }\n\n  tr {\n    td,\n    th {\n      padding: .5rem;\n    }\n  }\n}","/* ============================================================\n  Styles for general typography and links.\n  ============================================================ */\n\na {\n  color: $primary-3;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &[href$='.pdf'] {\n    display: inline-block;\n    background: url(\"/core/themes/classy/images/icons/application-pdf.png\") no-repeat left center;\n    padding: 0 0 0 1.2rem;\n  }\n}\n\np {\n  margin: 0 0 1rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n}\n\n// only style this stuff in the main body\n#block-paladin-content {\n  ul,\n  ol {\n    font-size: 1.125rem;\n    line-height: 1.5;\n\n    li {\n      margin: .5rem 0 .5rem 1rem;\n      padding: 0 0 0 .5rem;\n    }\n  }\n\n  ul li {\n    list-style: disc;\n  }\n\n  ol li {\n    list-style: decimal;\n  }\n}"]}